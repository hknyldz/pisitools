--- pisi/index.py~	2013-06-02 13:52:02.654874614 +0200
+++ pisi/index.py	2013-06-02 15:06:14.270711961 +0200
@@ -91,6 +91,19 @@
         specs = []
         deltas = {}
 
+        for fn in os.walk(repo_uri).next()[2]:
+            if fn.endswith(ctx.const.delta_package_suffix) or fn.endswith(ctx.const.package_suffix):
+                name, version = util.parse_package_name(fn)
+                if name.split("-").pop() in ["devel", "32bit", "doc", "docs", "userspace"]: name = name[:-1 - len(name.split("-").pop())] 
+                pkgpath = os.path.join(repo_uri,
+                                       name[0:4].lower() if name.startswith("lib") and len(name) > 3 else name.lower()[0],
+                                       name.lower())
+                if not os.path.isdir(pkgpath): os.makedirs(pkgpath)
+                ctx.ui.info("%-80.80s\r" % (_('Sorting: %s ') %
+                    fn), noln = False if ctx.config.get_option("verbose") else True)
+                shutil.copy2(os.path.join(repo_uri, fn), pkgpath)
+                os.remove(os.path.join(repo_uri, fn))
+
         for root, dirs, files in os.walk(repo_uri):
             # Filter hidden directories
             # TODO: Add --exclude-dirs parameter to CLI and filter according
--- pisi/operations/build.py~	2013-06-02 16:20:37.384548888 +0200
+++ pisi/operations/build.py	2013-06-02 16:21:48.049546306 +0200
@@ -1215,6 +1215,15 @@
                 path = util.join_path(package_dir, filename)
                 if os.path.exists(path):
                     return path
+                else:
+                    name, version = util.parse_package_name(filename)
+                    if name.split("-").pop() in ["devel", "32bit", "doc", "docs", "userspace"]: name = name[:-1 - len(name.split("-").pop())] 
+                    path = os.path.join(package_dir,
+                                           name[0:4].lower() if name.startswith("lib") and len(name) > 3 else name.lower()[0],
+                                           name.lower(),
+                                           filename)
+                    if os.path.exists(path):
+                        return path
 
         old_packages = {}
 
